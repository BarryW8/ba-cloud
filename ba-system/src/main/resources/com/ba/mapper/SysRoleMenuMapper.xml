<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ba.mapper.SysRoleMenuMapper">

    <resultMap id="BaseResultMap" type="com.ba.model.system.SysRoleMenu">
        <result property="id" column="sys_id"/>
        <result property="roleId" column="role_id"/>
        <result property="menuId" column="menu_id"/>
        <result property="menuAction" column="menu_action"/>
        <result property="note" column="note"/>
        <result property="orderBy" column="order_by"/>
        <result property="createTime" column="create_time"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createUserName" column="create_user_name"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateUserId" column="update_user_id"/>
        <result property="updateUserName" column="update_user_name"/>
    </resultMap>

    <sql id="Base_Column_List">
        sys_id
        ,    role_id,    menu_id,    menu_action,    note,       order_by,    create_time,    create_user_id,    create_user_name,    update_time,    update_user_id,     update_user_name
    </sql>

    <insert id="insert" parameterType="com.ba.model.system.SysRoleMenu">
        insert into sys_role_menu (sys_id, role_id, menu_id, menu_action, note, order_by, create_time, create_user_id,
                                   create_user_name, update_time, update_user_id, update_user_name)
        values (#{id}, #{roleId}, #{menuId}, #{menuAction}, #{note}, #{orderBy}, #{createTime}, #{createUserId},
                #{createUserName}, #{updateTime}, #{updateUserId}, #{updateUserName})

    </insert>
    <insert id="saveList">
        insert into sys_role_menu (sys_id, role_id, menu_id, menu_action, note, order_by, create_time, create_user_id,
        create_user_name, update_time, update_user_id, update_user_name)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.roleId}, #{item.menuId}, #{item.menuAction}, #{item.note}, #{item.orderBy},
            #{item.createTime}, #{item.createUserId},#{item.createUserName}, #{item.updateTime}, #{item.updateUserId},
            #{item.updateUserName})
        </foreach>
    </insert>

    <!-- 逻辑删除 -->
    <update id="deleteBySm" parameterType="com.ba.base.SimpleModel">
        update sys_role_menu
        set is_delete=1,
            update_user_id=#{delUser},
            update_user_name=#{delUserName},
            update_time=#{delDate}
        where sys_id = #{modelId}
    </update>

    <update id="update" parameterType="com.ba.model.system.SysRoleMenu">

        update sys_role_menu
        SET role_id          = #{roleId},
            menu_id          = #{menuId},
            menu_action      = #{menuAction},
            note             = #{note},
            order_by         = #{orderBy},
            create_user_name = #{createUserName},
            update_time        = #{updateTime},
            update_user_id     = #{updateUserId},
            update_user_name   = #{updateUserName}
        where sys_id = #{id}
    </update>
    <delete id="delByRoleId">
        delete from sys_role_menu
        where role_id = #{id}
    </delete>

    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role_menu
        where is_delete=0 and sys_id = #{id}
    </select>

    <select id="findPage" resultMap="BaseResultMap" parameterType="com.ba.base.Page">
        select
        <include refid="Base_Column_List"/>
        from sys_role_menu
        where is_delete = 0
        <if test="sql != '' and sql != null">
            ${sql}
        </if>
        order by create_time desc,order_by desc
        limit #{page},#{pageSize}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*)
        from sys_role_menu
        where is_delete = 0
        <if test="tmpSql != '' and tmpSql != null">
            ${tmpSql}
        </if>
    </select>

    <select id="findList" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM sys_role_menu WHERE is_delete=0
        <if test="sql != '' and sql != null">
            ${sql}
        </if>
        order by create_time desc,order_by desc
    </select>

</mapper>
