<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ba.mapper.DictionaryMapper">

    <resultMap id="BaseResultMap" type="com.ba.model.system.Dictionary">
        <id column="id" property="id"/>
        <result column="code" property="code"/>
        <result column="name" property="name"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_code" property="parentCode"/>
        <result column="status" property="status"/>
        <result column="order_by" property="orderBy"/>
        <result column="note" property="note"/>
        <result column="create_time" property="createTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_by" property="updateBy"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        code,
        name,
        parent_id,
        parent_code,
        status,
        order_by,
        note,
        create_time,
        create_by,
        update_time,
        update_by
    </sql>

    <sql id="Base_Query_List">
<!--        <if test="userStatus != null and userStatus != ''">-->
<!--            and user_status = #{userStatus}-->
<!--        </if>-->
<!--        <if test="keyword != null and keyword != ''">-->
<!--            and (-->
<!--            user_name like '%'#{keyword}'%'-->
<!--            or telephone like '%'#{keyword}'%'-->
<!--            )-->
<!--        </if>-->
    </sql>

    <insert id="insert">
        insert into dictionary (
            id,
            code,
            name,
            parent_id,
            parent_code,
            status,
            order_by,
            note,
            create_time,
            create_by
        ) values (
             #{id},
             #{code},
             #{name},
             #{parentId},
             #{parentCode},
             #{status},
             #{orderBy},
             #{note},
             #{createTime},
             #{createBy}
         )
    </insert>

    <!-- 逻辑删除 -->
    <update id="deleteBySm">
        update dictionary set is_delete=1, update_by=#{delUser}, update_time=#{delDate}
        where id=#{modelId}
    </update>

  	<!-- 逻辑删除 -->
    <update id="batchDeleteBySm">
        update dictionary set is_delete=1, update_by=#{delUser}, update_time=#{delDate}
        where id in
        <foreach collection="ids" open="(" separator="," close=")" item="id">
        #{id}
      </foreach>
    </update>

    <update id="update">
        update dictionary
        set code = #{code},
            name = #{name},
            parent_id = #{parentId},
            parent_code = #{parentCode},
            status = #{status},
            order_by = #{orderBy},
            note = #{note},
            update_time = #{updateTime},
            update_by = #{updateBy}
        where id = #{id}
    </update>

    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dictionary
        where is_delete=0 and id = #{id}
    </select>

    <select id="findPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dictionary
        where is_delete = 0
        <include refid="Base_Query_List" />
        order by create_time desc
        limit #{pageNum},#{pageSize}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*)
        from dictionary
        where is_delete = 0
        <include refid="Base_Query_List" />
    </select>

    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        FROM dictionary WHERE is_delete=0
        <include refid="Base_Query_List" />
        order by order_by
    </select>

    <select id="findListBySQL" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        FROM dictionary WHERE is_delete=0
        <if test="sql != '' and sql != null">
            ${sql}
        </if>
        order by order_by
    </select>

    <!-- 下拉列表 -->
    <select id="optionList" resultType="com.ba.vo.OptionVO">
        select id as id,code as code,name as name
        from dictionary
        where is_delete=0
        <if test="sql != '' and sql != null">
            ${sql}
        </if>
        order by order_by
    </select>

</mapper>
