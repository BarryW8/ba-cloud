<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ba.mapper.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.ba.model.system.SysRole">
        <id column="id" property="id"/>
        <result column="role_code" property="roleCode"/>
        <result column="role_name" property="roleName"/>
        <result column="app_type" property="appType"/>
        <result column="status" property="status"/>
        <result column="order_by" property="orderBy"/>
        <result column="note" property="note"/>
        <result column="create_time" property="createTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_by" property="updateBy"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        role_code,
        role_name,
        app_type,
        status,
        order_by,
        note,
        create_time,
        create_by,
        update_time,
        update_by
    </sql>

    <insert id="insert">
        insert into sys_role (
            id,
            role_code,
            role_name,
            app_type,
            status,
            order_by,
            note,
            create_time,
            create_by
        ) values (
             #{id},
             #{roleCode},
             #{roleName},
             #{appType},
             #{status},
             #{orderBy},
             #{note},
             #{createTime},
             #{createBy}
        )
    </insert>

    <!-- 逻辑删除 -->
    <update id="deleteBySm">
        update sys_role set is_delete=1, update_by=#{delUser}, update_time=#{delDate}
        where id=#{modelId}
    </update>

    <update id="update">
        update sys_role
        set
            role_code = #{roleCode},
            role_name = #{roleName},
            app_type = #{appType},
            status = #{status},
            order_by = #{orderBy},
            note = #{note},
            update_time = #{updateTime},
            update_by = #{updateBy}
        where id = #{id}
    </update>

    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where is_delete=0 and id = #{id}
    </select>

    <select id="findPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where is_delete = 0
        <if test="sql != '' and sql != null">
            ${sql}
        </if>
        order by order_by desc,create_time desc
        limit #{pageNum},#{pageSize}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*)
        from sys_role
        where is_delete = 0
        <if test="tmpSql != '' and tmpSql != null">
            ${tmpSql}
        </if>
    </select>

    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        FROM sys_role WHERE is_delete=0
        <if test="sql != '' and sql != null">
            ${sql}
        </if>
    </select>

    <select id="findListBySQL" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        FROM sys_role WHERE is_delete=0
        <if test="sql != '' and sql != null">
            ${sql}
        </if>
    </select>

</mapper>
